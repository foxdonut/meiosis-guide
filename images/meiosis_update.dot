digraph meiosis_update {
  createComponent [fontname=Hack, label = "\lMeiosis.createComponent(\{\l\ \ initialModel: function(model) \{ ... \},
    \l  state: function(model, state) \{ ... \},
    \l  actions: function(propose) \{ ... \},
    \l  view: function(state, actions/propose) \{ ... \},
    \l  postRender: function(state) \{ ... \},
    \l  ready: function(actions/propose) \{ ... \},
    \l  receive: function(model, proposal) \{ ... \},
    \l  nextAction: function(\{ model, proposal, actions/propose \}) \{ ... \}
    \l\});\l\l"]

  trigger [label = "view, event handler, ..."]
  propose [label = "propose(proposal)", fontname=Hack]
  receive [label = "receive(model, proposal)", fontname=Hack]
  state [label = "state(model, state)", fontname=Hack]
  view [label = "view(state, actions/propose)", fontname=Hack]
  render [style=filled, color=lightgreen]
  postRender [label = "postRender(state)", fontname=Hack]
  nextAction [label = "nextAction(\{ model, proposal, actions/propose \})", fontname=Hack]

  {rank=same; render postRender nextAction}

  createComponent -> trigger [arrowhead=none, arrowtail=empty, color=white]
  trigger -> propose [label = " calls"]
  propose -> receive [label = " proposal"]
  receive -> state [label = " model"]
  state -> view [label = " state"]
  view -> render [label = " state, view"]
  render -> postRender
  postRender -> nextAction
  nextAction -> propose [label = " calls"]
}
