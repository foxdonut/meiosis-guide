digraph meiosis_init {
  createComponent [fontname=Hack, label = "\lMeiosis.createComponent(\{\l\ \ initialModel: function(model) \{ ... \},
    \l  state: function(model, state) \{ ... \},
    \l  actions: function(propose) \{ ... \},
    \l  view: function(state, actions/propose) \{ ... \},
    \l  postRender: function(state) \{ ... \},
    \l  ready: function(actions/propose) \{ ... \},
    \l  receive: function(model, proposal) \{ ... \},
    \l  nextAction: function(\{ model, proposal, actions/propose \}) \{ ... \}
    \l\});\l\l"]

  initialModel [label="initialModel(model)", fontname=Hack]
  state [label = "state(model, state)", fontname=Hack]
  view [label = "view(state, actions/propose)", fontname=Hack]
  render [style=filled, color=lightgreen]
  postRender [label = "postRender(state)", fontname=Hack]
  ready [label = "ready(actions/propose)", fontname=Hack]

  {rank=same; render postRender ready}

  createComponent -> initialModel [arrowhead=none, arrowtail=empty, color=white]
  initialModel -> state [label = " model"]
  state -> view [label = " state"]
  view -> render [label = " state, view"]
  render -> postRender
  postRender -> ready
}
